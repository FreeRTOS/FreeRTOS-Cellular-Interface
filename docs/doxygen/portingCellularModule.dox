/**
@page cellular_porting_module_guide Porting Module Guide
@brief FreeRTOS Cellular Common Library<br>


FreeRTOS Cellular Common Library provides the following functions to help cellular module implementing FreeRTOS Cellular Library APIs.<br>
- FreeRTOS Cellular Library APIs implementation with 3GPP TS v27.007 AT commands.
- AT command functions to help implementing FreeRTOS Cellular Library APIs with vendor specific AT commands.
<br>

The following diagram illustrates the relation between cellular common and cellular module porting.<br>
Reference @subpage porting_cellular_module for detail porting information and implemented @subpage cellular_common_functions.
@image html cellular_common_module.png width=70%
<br>
*/

/**
@page porting_cellular_module Porting cellular module
@brief Introduction to cellular module porting<br>

Cellular common library provides APIS and URC handler implemented with 3GPP v27.007 AT commands.<br>
These APIs and URC handler can be reused when porting cellular module. <br>
Reference the following pages for detail information.
- @subpage cellular_common_APIs
- @subpage cellular_common_URC_handlers

Porting cellular module with cellular common portable with the following steps.<br>
-# <b>Create a folder in modules with the following files. </b>
 - modules/(module_name)/cellular_(module_name).c
 - modules/(module_name)/cellular_(module_name)_api.c
 - modules/(module_name)/cellular_(module_name)_urc_handler.c
 - modules/(module_name)/cellular_(module_name)_wrapper.c
-# <b>Implement cellular module porting interface @ref cellular_common_portable.h in cellular_(module_name).c </b><br>
Reference @subpage cellular_module for detail information.
-# <b>Implement FreeRTOS Cellular Library API with cellular module specific AT commands in cellular_(module_name)_api.c </b><br>
Reference @subpage cellular_module_api for detail information.
-# <b>Implement URC handler to handle URC event and call the corresponding callback function in cellular_(module_name)_urc_handler.c </b><br>
Reference @subpage cellular_module_urc_handler for detail information.
-# <b>Create FreeRTOS Cellular Library APIs implemented with 3GPP TS v27.007 AT commands ( @ref cellular_common_api.h ) in cellular_(module_name)_wrapper.c</b><br>

<b>Cellular module porting examples</b><br>
Three cellular module portings can be referenced.<br>
It is recommended that you start by cloning the implementation of one of the existing modems,<br>
then make modifications where your modem's vendor-specific (non-3GPP) AT commands are different. <br>
- <a href="https://github.com/FreeRTOS/FreeRTOS-Cellular-Interface-Reference-Quectel-BG96">BG96</a>
- <a href="https://github.com/FreeRTOS/FreeRTOS-Cellular-Interface-Reference-Sierra-Wireless-HL7802">HL7802</a>
- <a href="https://github.com/FreeRTOS/FreeRTOS-Cellular-Interface-Reference-ublox-SARA-R4">SARA R4 series</a>
*/

/**
@page cellular_common_APIs Cellular common APIs
@brief Cellular common supported APIs

<b>Cellular common supported APIs</b><br>
Cellular common library has 3GPP AT command implemented APIs.<br>
They can be used to minimize porting efforts when implement FreeRTOS Cellular Library APIs.<br>
| FreeRTOS Cellular Library APIs                                       | Cellular common supported |
| :-------------------------------------------------------| :-----------------------: |
| Cellular_Init                                           | O                         |
| Cellular_Cleanup                                        | O                         |
| Cellular_SetRatPriority                                 |                           |
| Cellular_GetRatPriority                                 |                           |
| Cellular_RfOn                                           | O                         |
| Cellular_RfOff                                          | O                         |
| Cellular_GetSimCardStatus                               |                           |
| Cellular_GetSimCardInfo                                 | O                         |
| Cellular_GetModemInfo                                   | O                         |
| Cellular_GetRegisteredNetwork                           | O                         |
| Cellular_GetNetworkTime                                 | O                         |
| Cellular_GetSignalInfo                                  |                           |
| Cellular_GetServiceStatus                               | O                         |
| Cellular_SetPdnConfig                                   | O                         |
| Cellular_GetPdnStatus                                   |                           |
| Cellular_ActivatePdn                                    |                           |
| Cellular_DeactivatePdn                                  |                           |
| Cellular_GetIPAddress                                   | O                         |
| Cellular_SetDns                                         |                           |
| Cellular_RegisterUrcNetworkRegistrationEventCallback    | O                         |
| Cellular_RegisterUrcPdnEventCallback                    | O                         |
| Cellular_RegisterUrcSignalStrengthChangedCallback       |                           |
| Cellular_RegisterModemEventCallback                     | O                         |
| Cellular_RegisterUrcGenericCallback                     | O                         |
| Cellular_GetPsmSettings                                 | O                         |
| Cellular_SetPsmSettings                                 | O                         |
| Cellular_GetEidrxSettings                               | O                         |
| Cellular_SetEidrxSettings                               | O                         |
| Cellular_ATCommandRaw                                   | O                         |
| Cellular_CreateSocket                                   | O                         |
| Cellular_SocketConnect                                  |                           |
| Cellular_SocketSend                                     |                           |
| Cellular_SocketRecv                                     |                           |
| Cellular_SocketClose                                    |                           |
| Cellular_GetHostByName                                  |                           |
| Cellular_SocketSetSockOpt                               | O                         |
| Cellular_SocketRegisterSocketOpenCallback               | O                         |
| Cellular_SocketRegisterDataReadyCallback                | O                         |
| Cellular_SocketRegisterClosedCallback                   | O                         |
*/

/**
@page cellular_common_URC_handlers Cellular common URC handlers
@brief Cellular common supported URC handlers

<b>Cellular common supported URC handler</b><br>
FreeRTOS Cellular Library APIs callback function is called in URC handler. <br>
3GPP URC handlers are also provided by cellular common library. <br>
They can be used to reduce porting effort. <br>
| FreeRTOS Cellular Library callback functions                      | Event                                      | Cellular common supported |
| :----------------------------------------------------| :----------------------------------------- | :-----------------------: |
| Cellular_RegisterUrcNetworkRegistrationEventCallback | CELLULAR_URC_EVENT_NETWORK_CS_REGISTRATION | O                         |
| Cellular_RegisterUrcNetworkRegistrationEventCallback | CELLULAR_URC_EVENT_NETWORK_PS_REGISTRATION | O                         |
| Cellular_RegisterUrcPdnEventCallback                 | CELLULAR_URC_EVENT_PDN_ACTIVATED           |                           |
| Cellular_RegisterUrcPdnEventCallback                 | CELLULAR_URC_EVENT_PDN_DEACTIVATED         |                           |
| Cellular_RegisterUrcSignalStrengthChangedCallback    | CELLULAR_URC_EVENT_SIGNAL_CHANGED          |                           |
| Cellular_RegisterModemEventCallback                  | CELLULAR_MODEM_EVENT_BOOTUP_OR_REBOOT      |                           |
| Cellular_RegisterModemEventCallback                  | CELLULAR_MODEM_EVENT_POWERED_DOWN          |                           |
| Cellular_RegisterModemEventCallback                  | CELLULAR_MODEM_EVENT_PSM_ENTER             |                           |
| Cellular_SocketRegisterSocketOpenCallback            | CELLULAR_URC_SOCKET_OPENED                 |                           |
| Cellular_SocketRegisterSocketOpenCallback            | CELLULAR_URC_SOCKET_OPEN_FAILED            |                           |
| Cellular_SocketRegisterDataReadyCallback             | None                                       |                           |
| Cellular_SocketRegisterClosedCallback                | None                                       |                           |

*/

/**
@page cellular_module cellular_module
@brief Implement cellular module porting interface. <br>
- Implement functions defined cellular_common_portable.h
- @ref Cellular_ModuleInit
- @ref Cellular_ModuleCleanUp
- @ref Cellular_ModuleEnableUE
- @ref Cellular_ModuleEnableUrc
@image html cellular_module_porting_functions.png width=80%
- Create variable instance defined in cellular_common_portable.h
  - AT command response token tables.
    - \ref CellularTokenTable_t.pCellularSrcTokenErrorTable : indicate AT command is success
    - @ref CellularTokenTable_t.cellularSrcTokenErrorTableSize
    - @ref CellularTokenTable_t.pCellularSrcTokenSuccessTable : indicat AT command fails
    - @ref CellularTokenTable_t.cellularSrcTokenSuccessTableSize
  - URC handler table
    - @ref CellularTokenTable_t.pCellularUrcTokenWoPrefixTable : URC token without prefix "+". These tokens are used in URC handler tables.<br>
    ( E.X "APP READY", "POWER ON" )
    - @ref CellularTokenTable_t.cellularUrcTokenWoPrefixTableSize
*/

/**
@page cellular_module_api cellular_module_api
@brief Implement FreeRTOS Cellular Library API with cellular module specific AT commands. <br>
- Create FreeRTOS Cellular Library APIs implemented with module specific AT commands with cellular_common.h and cellular_at_core.h
- AT command related data structure
 - @ref CellularAtReq_t : AT command request data structure
 - @ref CellularAtDataReq_t : Data send data structure
- Send AT command APIs
 - @ref _Cellular_AtcmdRequestWithCallback : Default timeout
 - @ref _Cellular_TimeoutAtcmdRequestWithCallback : Custom timeout
- Send AT command APIs for data receive ( E.X socket data receive )
 - @ref _Cellular_TimeoutAtcmdDataRecvRequestWithCallback
- Send AT command APIS for data send ( E.X socket data send )
 - @ref _Cellular_TimeoutAtcmdDataSendRequestWithCallback : Basic data send API
 - @ref _Cellular_AtcmdDataSend : Prefix callback function to indicate data mode start
 - @ref _Cellular_TimeoutAtcmdDataSendSuccessToken : Extra success token to indicate AT commnad success
@image html cellular_API_implementation.png width=80%

*/

/**
@page cellular_module_urc_handler cellular_module_urc_handler
@brief Implement URC handler to handle URC event and call the corresponding callback function. <br>
- @ref CellularTokenTable_t.pCellularUrcHandlerTable : URC handler table of @ref CellularAtParseTokenHandler_t
- @ref CellularTokenTable_t.cellularPrefixToParserMapSize : The size of the URC handler table
<br>

<b>Example URC handler table</b>:
```
CellularAtParseTokenMap_t CellularUrcHandlerTable[] =
{
{ "CEREG",             Cellular_CommonUrcProcessCereg },
{ "CGREG",             Cellular_CommonUrcProcessCgreg },
{ "CREG",              Cellular_CommonUrcProcessCreg  },
{ "NORMAL POWER DOWN", _Cellular_ProcessPowerDown     },
}
uint32_t CellularUrcHandlerTableSize = 4;
```
<br>
There are two types of URC strings can be handled with this table:
- <b>URC with prefix</b><br>
This type of URC string is of the following format:<br>
> <b>\<URC_leading_char\>\<URC_prefix\>":"\<URC_payload\></b><br>
The logic to check the URC prefix can be referenced in @ref Cellular_ATIsPrefixPresent<br>
Example of URC with prefix: <b>"+CREG:2,0"</b><br>
In this example, <br>
<b>URC_leading_char</b> is "+"<br>
<b>URC_prefix</b> is "CREG"<br>
<b>URC_payload</b> is "2,0"<br>
The URC callback function, @ref CellularAtParseTokenHandler_t, will be called with
 parameter <b>pInputStr</b> point to string URC_payload, <b>"2,0"</b> in this example.
> The default prefix leading char can be referenced in this config @ref CELLULAR_CHECK_IS_PREFIX_LEADING_CHAR.<br>
> The default valid prefix string chars can be referenced in this config @ref CELLULAR_CHECK_IS_PREFIX_CHAR.<br>
> Reference @subpage cellular_prefix_string_customize_config for more information.

- <b>URC without prefix</b><br>
This type of URC string is of fixed format.<br>
Example of URC without prefix : <b>"NORMAL POWER DOWN"</b><br>
The URC callback function, @ref CellularAtParseTokenHandler_t, will be called with
 parameter <b>pInputStr</b> point to URC string, <b>"NORMAL POWER DOWN"</b> in this example.
<br>

@image html cellular_URC_handler_implementation.png width=80%
*/

/**
@page cellular_prefix_string_customize_config Customization config for prefix string.
@brief The config can be redefined in cellular_config.h to support different modem prefix string format. <br>

@section CELLULAR_CHECK_IS_PREFIX_CHAR
@copydoc CELLULAR_CHECK_IS_PREFIX_CHAR

@section CELLULAR_CHECK_IS_PREFIX_LEADING_CHAR
@copydoc CELLULAR_CHECK_IS_PREFIX_LEADING_CHAR
*/

/**
@page cellular_common_functions Functions
@brief Functions of the cellular_common library.<br><br>

<b>The following APIs are 3GPP v27.007 AT command implemented FreeRTOS Cellular Library APIs.</b><br>
- @ref Cellular_CommonInit
- @ref Cellular_CommonCleanup
- @ref Cellular_CommonRegisterUrcNetworkRegistrationEventCallback
- @ref Cellular_CommonRegisterUrcPdnEventCallback
- @ref Cellular_CommonRegisterUrcSignalStrengthChangedCallback
- @ref Cellular_CommonRegisterUrcGenericCallback
- @ref Cellular_CommonRegisterModemEventCallback
- @ref Cellular_CommonATCommandRaw
- @ref Cellular_CommonCreateSocket
- @ref Cellular_CommonSocketSetSockOpt
- @ref Cellular_CommonSocketRegisterDataReadyCallback
- @ref Cellular_CommonSocketRegisterSocketOpenCallback
- @ref Cellular_CommonSocketRegisterClosedCallback
- @ref Cellular_CommonRfOn
- @ref Cellular_CommonRfOff
- @ref Cellular_CommonGetIPAddress
- @ref Cellular_CommonGetModemInfo
- @ref Cellular_CommonGetEidrxSettings
- @ref Cellular_CommonSetEidrxSettings
- @ref Cellular_CommonGetRegisteredNetwork
- @ref Cellular_CommonGetNetworkTime
- @ref Cellular_CommonGetServiceStatus
- @ref Cellular_CommonSetPdnConfig
- @ref Cellular_CommonGetPsmSettings
- @ref Cellular_CommonSetPsmSettings
- @ref Cellular_CommonGetSimCardInfo
- @ref Cellular_CommonGetSimCardLockStatus

The following APIs can be used when implementating FreeRTOS Cellular Library APIs with module specific AT command.<br>
<b>AT command parsing functions</b><br>
- @ref Cellular_ATRemovePrefix
- @ref Cellular_ATRemoveLeadingWhiteSpaces
- @ref Cellular_ATRemoveTrailingWhiteSpaces
- @ref Cellular_ATRemoveAllWhiteSpaces
- @ref Cellular_ATRemoveOutermostDoubleQuote
- @ref Cellular_ATRemoveAllDoubleQuote
- @ref Cellular_ATGetNextTok
- @ref Cellular_ATGetSpecificNextTok
- @ref Cellular_ATHexStrToHex
- @ref Cellular_ATIsStrDigit
- @ref Cellular_ATIsPrefixPresent
- @ref Cellular_ATStrDup
- @ref Cellular_ATStrStartWith
- @ref Cellular_ATcheckErrorCode
- @ref Cellular_ATStrtoi

<b>Cellular common library helper functions</b><br>
- @ref _Cellular_LibInit
- @ref _Cellular_LibCleanup
- @ref _Cellular_CheckLibraryStatus
- @ref _Cellular_TranslatePktStatus
- @ref _Cellular_CreateSocketData
- @ref _Cellular_RemoveSocketData
- @ref _Cellular_IsValidSocket
- @ref _Cellular_IsValidPdn
- @ref _Cellular_ConvertCsqSignalRssi
- @ref _Cellular_ConvertCsqSignalBer
- @ref _Cellular_GetModuleContext
- @ref _Cellular_ComputeSignalBars
- @ref _Cellular_GetCurrentRat
- @ref _Cellular_TranslatePktStatus
- @ref _Cellular_TranslateAtCoreStatus
- @ref _Cellular_AtcmdRequestWithCallback
- @ref _Cellular_TimeoutAtcmdRequestWithCallback
- @ref _Cellular_TimeoutAtcmdDataRecvRequestWithCallback
- @ref _Cellular_TimeoutAtcmdDataSendRequestWithCallback
- @ref _Cellular_AtcmdDataSend
- @ref _Cellular_TimeoutAtcmdDataSendSuccessToken

*/

