name: Release automation

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: 'Commit ID to tag and create a release for'
        required: true
      version_number:
        description: 'Release Version Number (Eg, v1.0.0)'
        required: true

jobs:
  tag-commit:
    name: Tag commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit_id }}
      - name: Configure git identity
        run: |
            git config --global user.name "Release Workflow"
      - name: Tag Commit and Push to remote
        run: |
          git tag ${{ github.event.inputs.version_number }} -a -m "FreeRTOS-Cellular-Interface Library ${{ github.event.inputs.version_number }}"
          git push origin --tags
      - name: Verify tag on remote
        run: |
          git tag -d ${{ github.event.inputs.version_number }}
          git remote update
          git checkout tags/${{ github.event.inputs.version_number }}
          git diff ${{ github.event.inputs.commit_id }} tags/${{ github.event.inputs.version_number }}
  create-zip:
    needs: tag-commit
    name: Create ZIP and verify package for release asset.
    runs-on: ubuntu-latest
    steps:
      - name: Install ZIP tools
        run: sudo apt-get install zip unzip
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit_id }}
          path: FreeRTOS-Cellular-Interface
          submodules: recursive
      - name: Checkout disabled submodules
        run: |
          cd FreeRTOS-Cellular-Interface
          git submodule update --init --checkout --recursive
      - name: Create ZIP
        run: |
          zip -r FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip FreeRTOS-Cellular-Interface -x "*.git*"
          ls ./
      - name: Validate created ZIP
        run: |
          mkdir zip-check
          mv FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip zip-check
          cd zip-check
          unzip FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip -d FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}
          ls FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}
          diff -r -x "*.git*" FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}/FreeRTOS-Cellular-Interface/ ../FreeRTOS-Cellular-Interface/
          cd ../
      - name: Build
        run: |
          cd zip-check/FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}/FreeRTOS-Cellular-Interface
          sudo apt-get install -y lcov
          cmake -S test -B build/ \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DBUILD_CLONE_SUBMODULES=ON \
          -DCMAKE_C_FLAGS='--coverage -Wall -Wextra -DNDEBUG'
          make -C build/ all
      - name: Test
        run: |
          cd zip-check/FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}/FreeRTOS-Cellular-Interface/build/
          ctest -E system --output-on-failure
          cd ..
      - name: Create artifact of ZIP
        uses: actions/upload-artifact@v2
        with:
          name: FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip
          path: zip-check/FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip
  create-release:
    needs: create-zip
    name: Create Release and Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version_number }}
          release_name: ${{ github.event.inputs.version_number }}
          body: Release ${{ github.event.inputs.version_number }} of the FreeRTOS-Cellular-Interface Library.
          draft: false
          prerelease: false
      - name: Download ZIP artifact
        uses: actions/download-artifact@v2
        with:
          name: FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip
          asset_name: FreeRTOS-Cellular-Interface-${{ github.event.inputs.version_number }}.zip
          asset_content_type: application/zip
